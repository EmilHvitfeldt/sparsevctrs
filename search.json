[{"path":"https://emilhvitfeldt.github.io/sparsevctrs/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 sparsevctrs authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emil Hvitfeldt. Author, maintainer.","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hvitfeldt E (2024). sparsevctrs: Package (One Line, Title Case). R package version 0.0.0.9000,  https://emilhvitfeldt.github.io/sparsevctrs/, https://github.com/EmilHvitfeldt/sparsevctrs.","code":"@Manual{,   title = {sparsevctrs: What the Package Does (One Line, Title Case)},   author = {Emil Hvitfeldt},   year = {2024},   note = {R package version 0.0.0.9000,  https://emilhvitfeldt.github.io/sparsevctrs/},   url = {https://github.com/EmilHvitfeldt/sparsevctrs}, }"},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/index.html","id":"sparsevctrs","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"PROTOTYPE. USE goal sparsevctrs provide sparse vector class compatible tibbles.","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version sparsevctrs like :","code":"remotes::install_github(\"emilhvitfeldt/sparsevctrs\")"},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"class compatible tibbles","code":"library(sparsevctrs)  x <- sparse_double(4, 7, 10)  x #>  [1] 0 0 0 0 0 0 4 0 0 0 sum(x) #> [1] 4  sparse_double(4, 7, 10) + sparse_double(3, 2, 10) #>  [1] 3.456532e-314 2.847320e-314 2.714492e-314 2.927164e-314 4.940656e-323 #>  [6]  0.000000e+00  0.000000e+00  3.000000e+00  0.000000e+00  0.000000e+00 library(tibble)  tibble(x = sample(1:10), y = sparse_double(1, 7, 10)) #> # A tibble: 10 × 2 #>        x     y #>    <int> <dbl> #>  1    10     0 #>  2     6     0 #>  3     5     0 #>  4     4     0 #>  5     1     0 #>  6     8     0 #>  7     2     1 #>  8     7     0 #>  9     9     0 #> 10     3     0"},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/coerce_to_sparse_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce sparse matrix to data frame with sparse columns — coerce_to_sparse_data_frame","title":"Coerce sparse matrix to data frame with sparse columns — coerce_to_sparse_data_frame","text":"Coerce sparse matrix data frame sparse columns","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/coerce_to_sparse_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce sparse matrix to data frame with sparse columns — coerce_to_sparse_data_frame","text":"","code":"coerce_to_sparse_data_frame(x)"},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/coerce_to_sparse_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce sparse matrix to data frame with sparse columns — coerce_to_sparse_data_frame","text":"x sparse matrix.","code":""},{"path":[]},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/coerce_to_sparse_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce sparse matrix to data frame with sparse columns — coerce_to_sparse_data_frame","text":"","code":"set.seed(1234) mat <- matrix(sample(0:1, 100, TRUE, c(0.9, 0.1)), nrow = 10) colnames(mat) <- letters[1:10] sparse_mat <- Matrix::Matrix(mat, sparse = TRUE) sparse_mat #> 10 x 10 sparse Matrix of class \"dgCMatrix\" #>   [[ suppressing 10 column names ‘a’, ‘b’, ‘c’ ... ]] #>                           #>  [1,] . . . . . . . . 1 . #>  [2,] . . . . . . . . . 1 #>  [3,] . . . . . . . . . . #>  [4,] . 1 . . . . . . . . #>  [5,] . . . . . . . . . . #>  [6,] . . . . . . . . . . #>  [7,] . . . . . . . . . . #>  [8,] . . 1 . . . . . . . #>  [9,] . . . 1 . . . . . . #> [10,] . . . . . . . . . .  res <- coerce_to_sparse_data_frame(sparse_mat) res #>    a b c d e f g h i j #> 1  0 0 0 0 1 1 1 1 1 0 #> 2  0 0 0 0 0 0 0 0 0 1 #> 3  0 0 0 0 0 0 0 0 0 0 #> 4  1 1 0 0 0 0 0 0 0 0 #> 5  0 0 0 0 0 0 0 0 0 0 #> 6  0 0 0 0 0 0 0 0 0 0 #> 7  0 0 0 0 0 0 0 0 0 0 #> 8  0 0 1 0 0 0 0 0 0 0 #> 9  0 0 0 1 1 1 1 1 0 0 #> 10 0 0 0 0 0 0 0 0 0 0  # All columns are sparse vapply(res, is_sparse_vector, logical(1)) #>    a    b    c    d    e    f    g    h    i    j  #> TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE"},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/coerce_to_sparse_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce sparse data frame to sparse matrix — coerce_to_sparse_matrix","title":"Coerce sparse data frame to sparse matrix — coerce_to_sparse_matrix","text":"Coerce sparse data frame sparse matrix","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/coerce_to_sparse_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce sparse data frame to sparse matrix — coerce_to_sparse_matrix","text":"","code":"coerce_to_sparse_matrix(x)"},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/coerce_to_sparse_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce sparse data frame to sparse matrix — coerce_to_sparse_matrix","text":"x data frame tibble sparse columns.","code":""},{"path":[]},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/coerce_to_sparse_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce sparse data frame to sparse matrix — coerce_to_sparse_matrix","text":"","code":"set.seed(1234) sparse_tbl <- lapply(1:10, function(x) sparse_double(x, x, length = 10)) names(sparse_tbl) <- letters[1:10] sparse_tbl <- as.data.frame(sparse_tbl) sparse_tbl #>    a b c d e f g h i  j #> 1  1 0 0 0 0 0 0 0 0  0 #> 2  0 2 0 0 0 0 0 0 0  0 #> 3  0 0 3 0 0 0 0 0 0  0 #> 4  0 0 0 4 0 0 0 0 0  0 #> 5  0 0 0 0 5 0 0 0 0  0 #> 6  0 0 0 0 0 6 0 0 0  0 #> 7  0 0 0 0 0 0 7 0 0  0 #> 8  0 0 0 0 0 0 0 8 0  0 #> 9  0 0 0 0 0 0 0 0 9  0 #> 10 0 0 0 0 0 0 0 0 0 10  res <- coerce_to_sparse_matrix(sparse_tbl) res #> 10 x 10 sparse Matrix of class \"dgCMatrix\" #>   [[ suppressing 10 column names ‘a’, ‘b’, ‘c’ ... ]] #>                         #> 1  1 . . . . . . . .  . #> 2  . 2 . . . . . . .  . #> 3  . . 3 . . . . . .  . #> 4  . . . 4 . . . . .  . #> 5  . . . . 5 . . . .  . #> 6  . . . . . 6 . . .  . #> 7  . . . . . . 7 . .  . #> 8  . . . . . . . 8 .  . #> 9  . . . . . . . . 9  . #> 10 . . . . . . . . . 10"},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/coerce_to_sparse_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce sparse matrix to tibble with sparse columns — coerce_to_sparse_tibble","title":"Coerce sparse matrix to tibble with sparse columns — coerce_to_sparse_tibble","text":"Coerce sparse matrix tibble sparse columns","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/coerce_to_sparse_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce sparse matrix to tibble with sparse columns — coerce_to_sparse_tibble","text":"","code":"coerce_to_sparse_tibble(x)"},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/coerce_to_sparse_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce sparse matrix to tibble with sparse columns — coerce_to_sparse_tibble","text":"x sparse matrix.","code":""},{"path":[]},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/coerce_to_sparse_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce sparse matrix to tibble with sparse columns — coerce_to_sparse_tibble","text":"","code":"set.seed(1234) mat <- matrix(sample(0:1, 100, TRUE, c(0.9, 0.1)), nrow = 10) colnames(mat) <- letters[1:10] sparse_mat <- Matrix::Matrix(mat, sparse = TRUE) sparse_mat #> 10 x 10 sparse Matrix of class \"dgCMatrix\" #>   [[ suppressing 10 column names ‘a’, ‘b’, ‘c’ ... ]] #>                           #>  [1,] . . . . . . . . 1 . #>  [2,] . . . . . . . . . 1 #>  [3,] . . . . . . . . . . #>  [4,] . 1 . . . . . . . . #>  [5,] . . . . . . . . . . #>  [6,] . . . . . . . . . . #>  [7,] . . . . . . . . . . #>  [8,] . . 1 . . . . . . . #>  [9,] . . . 1 . . . . . . #> [10,] . . . . . . . . . .  res <- coerce_to_sparse_tibble(sparse_mat) res #> # A tibble: 10 × 10 #>        a     b     c     d     e     f     g     h     i     j #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1     0     0     0     0     1     1     1     1     1     0 #>  2     0     0     0     0     0     0     0     0     0     1 #>  3     0     0     0     0     0     0     0     0     0     0 #>  4     1     1     0     0     0     0     0     0     0     0 #>  5     0     0     0     0     0     0     0     0     0     0 #>  6     0     0     0     0     0     0     0     0     0     0 #>  7     0     0     0     0     0     0     0     0     0     0 #>  8     0     0     1     0     0     0     0     0     0     0 #>  9     0     0     0     1     1     1     1     1     0     0 #> 10     0     0     0     0     0     0     0     0     0     0  # All columns are sparse vapply(res, is_sparse_vector, logical(1)) #>    a    b    c    d    e    f    g    h    i    j  #> TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE"},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/extractors.html","id":null,"dir":"Reference","previous_headings":"","what":"Information extraction from sparse vectors — extractors","title":"Information extraction from sparse vectors — extractors","text":"Extract positions values sparse vectors without need materialize vector.","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/extractors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Information extraction from sparse vectors — extractors","text":"","code":"sparse_positions(x)  sparse_values(x)"},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/extractors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Information extraction from sparse vectors — extractors","text":"x vector extracted .","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/extractors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Information extraction from sparse vectors — extractors","text":"ease use, functions also works non-sparse variables.","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/extractors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Information extraction from sparse vectors — extractors","text":"","code":"x_sparse <- sparse_double(c(pi, 5, 0.1), c(2, 5, 10), 10) x_dense <- c(0, pi, 0, 0, 0.5, 0, 0, 0, 0, 0.1)  sparse_positions(x_sparse) #> [1]  2  5 10 sparse_values(x_sparse) #> [1] 3.141593 5.000000 0.100000  sparse_positions(x_dense) #>  [1]  1  2  3  4  5  6  7  8  9 10 sparse_values(x_dense) #>  [1] 0.000000 3.141593 0.000000 0.000000 0.500000 0.000000 0.000000 0.000000 #>  [9] 0.000000 0.100000"},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/sparse_double.html","id":null,"dir":"Reference","previous_headings":"","what":"Create sparse double vector — sparse_double","title":"Create sparse double vector — sparse_double","text":"Create sparse double vector","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/sparse_double.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create sparse double vector — sparse_double","text":"","code":"sparse_double(values, positions, length)"},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/sparse_double.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create sparse double vector — sparse_double","text":"values Numeric vector, values non-zero entries. positions integer vector, indices non-zero entries. length Integer, Length vector.","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/sparse_double.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create sparse double vector — sparse_double","text":"developers: setting options(\"sparsevctrs.verbose_materialize\" = TRUE) print message time sparse vector forced materialize.","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/sparse_double.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create sparse double vector — sparse_double","text":"","code":"sparse_double(numeric(), integer(), 10) #>  [1] 0 0 0 0 0 0 0 0 0 0  sparse_double(c(pi, 5, 0.1), c(2, 5, 10), 10) #>  [1] 0.000000 3.141593 0.000000 0.000000 5.000000 0.000000 0.000000 0.000000 #>  [9] 0.000000 0.100000  str(   sparse_double(c(pi, 5, 0.1), c(2, 5, 10), 1000000000) ) #>  num [1:1000000000] 0 3.14 0 0 5 ..."},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/sparsevctrs-package.html","id":null,"dir":"Reference","previous_headings":"","what":"sparsevctrs: What the Package Does (One Line, Title Case) — sparsevctrs-package","title":"sparsevctrs: What the Package Does (One Line, Title Case) — sparsevctrs-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/sparsevctrs-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sparsevctrs: What the Package Does (One Line, Title Case) — sparsevctrs-package","text":"Maintainer: Emil Hvitfeldt emilhhvitfeldt@gmail.com (ORCID)","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/type-predicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Sparse vector type checkers — type-predicates","title":"Sparse vector type checkers — type-predicates","text":"Sparse vector type checkers","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/type-predicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sparse vector type checkers — type-predicates","text":"","code":"is_sparse_vector(x)  is_sparse_double(x)"},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/type-predicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sparse vector type checkers — type-predicates","text":"x value checked.","code":""},{"path":"https://emilhvitfeldt.github.io/sparsevctrs/reference/type-predicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sparse vector type checkers — type-predicates","text":"","code":"x_sparse <- sparse_double(c(pi, 5, 0.1), c(2, 5, 10), 10) x_dense <- c(0, pi, 0, 0, 0.5, 0, 0, 0, 0, 0.1)  is_sparse_vector(x_sparse) #> [1] TRUE is_sparse_vector(x_dense) #> [1] FALSE  # Forced materialization is_sparse_vector(x_sparse[]) #> [1] FALSE"}]
